(defun submit-buffer-to-codepad ()
  "Submit the content of the current buffer to the http://codepad.org"
  (interactive)
  (defun emacs-mode-to-codepad-lang (mode)
    (cond ((string= mode "scheme-mode") "Scheme")
          ((string= mode "c-mode") "C")
          ((string= mode "c++-mode") "C++")
          ((string= mode "perl-mode") "Perl")
          ((string= mode "python-mode") "Python")
          (t "Plain Text")))
  (defun get-browse-function ()
    (cond ((functionp 'w3m) 'w3m)
          (t 'browse-url url)))
  (defun submit-to-codepad (lang code)
    (let (
          (url-request-method "POST")
          (url-request-data
           (concat "lang=" (url-hexify-string lang)
                   "&code=" (url-hexify-string code)
                   "&run=True"
                   "&submit=Submit")
           )
          (temp-buf-name "*curl-output*")
          (codepad-url "http://codepad.org/")
          (arg-temp-file     (make-temp-file "codepad_help"))
          )
      (find-file arg-temp-file)
      (insert url-request-data)
      (save-buffer)
      (kill-buffer (buffer-name))
      (get-buffer-create temp-buf-name)
      (shell-command (concat "curl -d@" arg-temp-file " \"" codepad-url "\"") temp-buf-name)
      (switch-to-buffer temp-buf-name)
      (goto-char 0)
      (re-search-forward "<a href=\"/\\([0-9a-zA-Z]+\\)\">/\\1</a>")
      (funcall (get-browse-function)
               (concat
                codepad-url
                (match-string 1)
                ))
      (kill-buffer temp-buf-name)
      ))
  (submit-to-codepad
   (emacs-mode-to-codepad-lang major-mode)
   (buffer-substring-no-properties (point-min) (point-max))
   )
  )
